Imports System.IO
Imports System.Text
Imports System.Collections

Public Class Form6


    Sub Generando()

        Dim out_path As String
        out_path = Environment.GetFolderPath(Environment.SpecialFolder.Desktop) & "\ ptarL4A.conf"

        Using sw As StreamWriter = New StreamWriter(out_path)

            


            sw.Write("            !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! " & vbLf)
            sw.Write("! " & vbLf)
            sw.Write("!-----Línea 4A ------- " & vbLf)
            sw.Write("!                                 T H A L E S " & vbLf)
            sw.Write("!-----ORIANA V.1.0           Document ------- " & vbLf)
            sw.Write("! " & vbLf)
            sw.Write("! " & vbLf)
            sw.Write("            !NOMBRE() : ptar.conf() " & vbLf)
            sw.Write("! " & vbLf)
            sw.Write("            !DESCRIPCION() " & vbLf)
            sw.Write("! " & vbLf)
            sw.Write("!   Este fichero contiene la definicion de un conjunto de parametros " & vbLf)
            sw.Write("!   para cada estacion en la linea. " & vbLf)
            sw.Write("!   Se emplea para inicializar la relacion MDB PTAR. " & vbLf)
            sw.Write("! " & vbLf)
            sw.Write("! " & vbLf)
            sw.Write("            !Campos() " & vbLf)
            sw.Write("! " & vbLf)
            sw.Write("!     -> IDENT_SIG        = Configuracion de la señalizacion " & vbLf)
            sw.Write("!                           Ver documento ATC Santiago Line 4 " & vbLf)
            sw.Write("!                           ATC-ATS Interface Specification " & vbLf)
            sw.Write("!                           Capitulo 3.6 columnas TRACK1 UP y DOWN  " & vbLf)
            sw.Write("!                            (para la Via 1) " & vbLf)
            sw.Write("!                           Capitulo 3.6 columnas TRACK2 DOWN y UP  " & vbLf)
            sw.Write("!                            (para la Via 2) " & vbLf)
            sw.Write("!	-> HRG_HIDSO        = Nombre del DSO principal en el sentido normal de " & vbLf)
            sw.Write("!                             circulacion (si HRG_OPTDSO = T en TCF) " & vbLf)
            sw.Write("!	-> HRG_DSO_BIS      = Nombre del DSO secundario en el sentido opuesto " & vbLf)
            sw.Write("!                             (si HRG_OPTDSO = T en TCF) " & vbLf)
            sw.Write("!	-> VCD_VEL          = Nombre de la variable de comando de velocidad " & vbLf)
            sw.Write("!	-> HRG_INUVOIE (VO) = Nombre del tramo si parada en via (lugar del DSO) " & vbLf)
            sw.Write("!	-> HRG_INUTER (TER) = Nombre del terminal si parada en terminal  " & vbLf)
            sw.Write("!                             (lugar del DSO) para los terminales de extremidad " & vbLf)
            sw.Write("!                              y para los terminales intermedios (bucles) " & vbLf)
            sw.Write("!	-> HRG_INUSTA (STA) = Nombre de la estacion " & vbLf)
            sw.Write("!	-> HRG_BTE          = Tiempo de entrada (segundos). Tiempo transcurrido " & vbLf)
            sw.Write("!                              entre liberacion CDV antes de anden y parada del  " & vbLf)
            sw.Write("!                              tren en el anden " & vbLf)
            sw.Write("!	-> HRG_BTS          = Tiempo de salida (segundos). Tiempo transcurrido  " & vbLf)
            sw.Write("!                             entre el arranque del tren y la ocupacion del  " & vbLf)
            sw.Write("!                             CDV de salida. " & vbLf)
            sw.Write("!	-> HRG_HT1          = Umbral para emision alarma retraso con respecto  " & vbLf)
            sw.Write("!                             horario programado segundos). " & vbLf)
            sw.Write("!	-> HRG_HT2          = Umbral para emision alarma retraso con respecto  " & vbLf)
            sw.Write("!                             horario de linea segundos) " & vbLf)
            sw.Write("!	-> TRT_DSO          = Lista de las comprobaciones para el encendido de  " & vbLf)
            sw.Write("!                             PBO. " & vbLf)
            sw.Write("!Valores(posibles) : VIA_SAL, VIA_LLE, TALLER, ITI, " & vbLf)
            sw.Write("!SAL / TAL, LLE / TAL, SAL / ITI, LLE / ITI " & vbLf)
            sw.Write("!	-> ITI_DSO          = Lista de itinerarios incompatibles con el apagado " & vbLf)
            sw.Write("!                             del PBO. " & vbLf)
            sw.Write("!     -> HRG_ENERSECC     = Seccion de energia " & vbLf)
            sw.Write("!	-> HRG_ICDVAJE      = Nombre del CDV antes de anden (- para terminal). " & vbLf)
            sw.Write("!	-> HRG_INCQ (NQ)    = Cantidad de CDV de anden. " & vbLf)
            sw.Write("!	-> HRG_ICDV1	  = Lista de los CDV de anden + interestacion  " & vbLf)
            sw.Write("!                             (interst. 1) " & vbLf)
            sw.Write("!                             (si HRG_OPTALL = T en TCF) " & vbLf)
            sw.Write("! " & vbLf)
            sw.Write("!       -> BD_ALIAS        = Alias de BD Scadasoft " & vbLf)
            sw.Write("!       -> EST_COLOR_S     = Color del anden                " & vbLf)
            sw.Write("!                            0: sin color, 1: rojo, 2: verde, 3 rojo/verde " & vbLf)
            sw.Write("! " & vbLf)
            sw.Write("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! " & vbLf)
            sw.Write("! " & vbLf)
            sw.Write("! " & vbLf)
            sw.Write("! " & vbLf)
            sw.Write("[ATTRIBUTES  " & vbLf)
            sw.Write("KEY   IDENT_SIG HRG_HIDSO HRG_DSO_BIS VCD_VEL  " & vbLf)
            sw.Write("      HRG_INUVOIE HRG_INUTER HRG_INUSTA HRG_BTE HRG_BTS HRG_HT1 HRG_HT2 " & vbLf)
            sw.Write("      TRT_DSO ITI_DSO HRG_ENERSECC HRG_ICDVAJE HRG_INCQ HRG_ICDV1 BD_ALIAS EST_COLOR_S] " & vbLf)
            sw.Write("! " & vbLf)
            sw.Write("! " & vbLf)
            sw.Write("! ============================================================================= " & vbLf)
            sw.Write("!Via(V1) " & vbLf)
            sw.Write("! " & vbLf)
            sw.Write("!KEY    IDENT_SIG  DSO     DSO_BIS VCD_VEL  	VO TER STA  TE  TS  T1  T2   TRT_DSO  ITI_DSO HRG_EN AJE	 NQ CDVS													     BD_ALIAS	        EST_COLOR_S " & vbLf)
            sw.Write("!				    																									        " & vbLf)
            sw.Write("VIM_V1  172,173    PBO1VIM -       -        	V1 VIM VIM  04  10  360 360  NINGUNO  -       750S1  -  	 3  CDV22CVIM, CDV22BVIM, CDV22AVIM, CDV21VIM,  CDVAG21NVIM,  CDV20DVIM, CDV20CVIM, CDV20BVIM, CDV20AVIM	     VIM_TR_AND_001 0 " & vbLf)
            sw.Write("SJU_V1  174        PBO1SJU -       -        	V1 -   SJU  15  07  360 360  NINGUNO  -       750S1  CDV20AVIM   1  CDV12SJU,  CDV13ASJU, CDV13BSJU, CDV11ALGR, CDV11BLGR							     SJU_TR_AND_001 0 " & vbLf)
            sw.Write("LGR_V1  176        PBO1LGR -       -        	V1 -   LGR  08  15  360 360  NINGUNO  -       750S1  CDV11BLGR   1  CDV12LGR,  CDV13ALGR, CDV13BLGR, CDV11ASRO, CDV11BSRO,    CDV11CSRO 					     LGR_TR_AND_001 0 " & vbLf)
            sw.Write("  178        PBO1SRO -       -        	V1 -   SRO  13  11  360 360  NINGUNO  -       750S1  CDV11CSRO   1  CDV12SRO,  CDV13SRO,  CDV11SRA										     SRO_TR_AND_001 0 " & vbLf)
            sw.Write("SRA_V1  180        PBO1SRA -       -        	V1 -   SRA  13  12  360 360  NINGUNO  -       750S1  CDV11SRA	 1  CDV12SRA,  CDV13SRA,  CDV14ASRA, CDV14BSRA, CDV14CSRA,    CDV10LCI,  CDV11LCI,  CDVAG11NLCI 		     SRA_TR_AND_001 0 " & vbLf)
            sw.Write("  182,183    -       -       -        	V1 LCI LCI  13  -   360 360  NINGUNO  -       750S1  CDVAG11NLCI 3  CDV12ALCI, CDV12BLCI, CDV12CLCI										     LCI_TR_AND_001 0 " & vbLf)
            sw.Write("! " & vbLf)
            sw.Write("! " & vbLf)
            sw.Write("! ============================================================================= " & vbLf)
            sw.Write("!Via(V2) " & vbLf)
            sw.Write("! " & vbLf)
            sw.Write("!KEY    IDENT_SIG  DSO     DSO_BIS VCD_VEL  	VO TER STA  TE  TS  T1  T2   TRT_DSO  ITI_DSO HRG_EN AJE	 NQ CDVS													     BD_ALIAS	         EST_COLOR_S " & vbLf)
            sw.Write("! " & vbLf)
            sw.Write("VIM_V2  45,44      -       -       -        	V2 VIM VIM  21   -  360 360  NINGUNO  -       750S1  CDVAG11NVIM 3  CDV12AVIM, CDV12BVIM, CDV12CVIM										     VIM_TR_AND_002 0 " & vbLf)
            sw.Write("SJU_V2  47         PBO2SJU -       -        	V2 -   SJU  09  15  360 360  NINGUNO  -       750S1  CDV23ASJU   1  CDV22SJU,  CDV21BSJU, CDV21ASJU, CDV10AVIM, CDV10BVIM,   CDV11VIM,  CDVAG11NVIM				     SJU_TR_AND_002 0 " & vbLf)
            sw.Write("LGR_V2  49         PBO2LGR -       -        	V2 -   LGR  16  08  360 360  NINGUNO  -       750S1  CDV23ALGR   1  CDV22LGR,  CDV21BLGR, CDV21ALGR, CDV23BSJU, CDV23ASJU							     LGR_TR_AND_002 0 " & vbLf)
            sw.Write("SRO_V2  51         PBO2SRO -       -        	V2 -   SRO  13  12  360 360  NINGUNO  -       750S1  CDV23SRO	 1  CDV22SRO,  CDV21SRO,  CDV20BSRO, CDV20ASRO, CDV23BLGR,   CDV23ALGR  					     SRO_TR_AND_002 0 " & vbLf)
            sw.Write("SRA_V2  53         PBO2SRA -       -        	V2 -   SRA  12  12  360 360  NINGUNO  -       750S1  CDV23SRA	 1  CDV22SRA,  CDV21SRA,  CDV23SRO										     SRA_TR_AND_002 0 " & vbLf)
            sw.Write("LCI_V2  55,54      PBO2LCI -       -        	V2 LCI LCI  11  06  360 360  NINGUNO  -       750S1  -  	 3  CDV22CLCI, CDV22BLCI, CDV22ALCI, CDV21LCI,  CDVAG21NLCI, CDV20DLCI, CDV20CLCI, CDV20BLCI, CDV20ALCI, CDV23SRA    LCI_TR_AND_002 0 " & vbLf)
            sw.Write("! " & vbLf)
            sw.Write("[END RELATION] " & vbLf)
        End Using


        out_path = Environment.GetFolderPath(Environment.SpecialFolder.Desktop) & "\ ptarL4.conf"

        Using sw As StreamWriter = New StreamWriter(out_path)

            sw.Write("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("!                                T H A L E S" & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("! NOMBRE: ptar.conf " & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("! DESCRIPCION:" & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("!   Este fichero contiene la definicion de un conjunto de parametros" & vbLf)
            sw.Write("!   para cada estacion en la linea." & vbLf)
            sw.Write("!   Se emplea para inicializar la relacion MDB PTAR." & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("!   Campos:" & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("!       -> IDENT_SIG        = Configuracion de la signalisacion" & vbLf)
            sw.Write("!                             [direccion 1, direccion 2]" & vbLf)
            sw.Write("!	-> HRG_HIDSO        = Nombre del DSO principal en el sentido normal de" & vbLf)
            sw.Write("!                             circulacion (si HRG_OPTDSO = T en TCF)" & vbLf)
            sw.Write("!	-> HRG_DSO_BIS      = Nombre del DSO secundario en el sentido opuesto" & vbLf)
            sw.Write("!                             (si HRG_OPTDSO = T en TCF)" & vbLf)
            sw.Write("!	-> VCD_VEL          = Nombre de la variable de comando de velocidad" & vbLf)
            sw.Write("!	-> HRG_INUVOIE (VO) = Nombre del tramo si parada en via (lugar del DSO)" & vbLf)
            sw.Write("!	-> HRG_INUTER (TER) = Nombre del terminal si parada en terminal " & vbLf)
            sw.Write("!                             (lugar del DSO) para los terminales de extremidad" & vbLf)
            sw.Write("!                              y para los terminales intermedios (bucles)" & vbLf)
            sw.Write("!	-> HRG_INUSTA (STA) = Nombre de la estacion" & vbLf)
            sw.Write("!	-> HRG_BTE          = Tiempo de entrada (segundos). Tiempo transcurrido" & vbLf)
            sw.Write("!                              entre liberacion CDV antes de anden y parada del" & vbLf)
            sw.Write("!                              tren en el anden" & vbLf)
            sw.Write("!	-> HRG_BTS          = Tiempo de salida (segundos). Tiempo transcurrido " & vbLf)
            sw.Write("!                             entre el arranque del tren y la ocupacion del " & vbLf)
            sw.Write("!                             CDV de salida." & vbLf)
            sw.Write("!	-> HRG_HT1          = Umbral para emision alarma retraso con respecto " & vbLf)
            sw.Write("!                             horario programado segundos)." & vbLf)
            sw.Write("!	-> HRG_HT2          = Umbral para emision alarma retraso con respecto " & vbLf)
            sw.Write("!                             horario de linea segundos)" & vbLf)
            sw.Write("!	-> TRT_DSO          = Lista de las comprobaciones para el encendido de " & vbLf)
            sw.Write("!                             PBO." & vbLf)
            sw.Write("!	                      Valores posibles: VIA_SAL,VIA_LLE,TALLER,ITI," & vbLf)
            sw.Write("!                                               SAL/TAL,LLE/TAL,SAL/ITI,LLE/ITI" & vbLf)
            sw.Write("!	-> ITI_DSO          = Lista de itinerarios incompatibles con el apagado" & vbLf)
            sw.Write("!                             del PBO." & vbLf)
            sw.Write("!       -> HRG_ENERSECC     = Seccion de energia" & vbLf)
            sw.Write("!	-> HRG_ICDVAJE      = Nombre del CDV antes de anden (- para terminal)." & vbLf)
            sw.Write("!	-> HRG_INCQ (NQ)    = Cantidad de CDV de anden." & vbLf)
            sw.Write("!	-> HRG_ICDV1	    = Lista de los CDV de anden + interestacion " & vbLf)
            sw.Write("!                             (interst. 1) (si HRG_OPTALL = T en TCF)" & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("!       -> BD_ALIAS        = Alias de BD Scadasoft" & vbLf)
            sw.Write("!       -> EST_COLOR_S     = Color del anden" & vbLf)
            sw.Write("!                            0: sin color, 1: rojo, 2: verde, 3 rojo/verde" & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" & vbLf)

            sw.Write("!" & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("[ATTRIBUTES " & vbLf)
            sw.Write("KEY   IDENT_SIG HRG_HIDSO HRG_DSO_BIS VCD_VEL " & vbLf)
            sw.Write("      HRG_INUVOIE HRG_INUTER HRG_INUSTA HRG_BTE HRG_BTS HRG_HT1 HRG_HT2" & vbLf)
            sw.Write("      TRT_DSO ITI_DSO HRG_ENERSECC HRG_ICDVAJE HRG_INCQ HRG_ICDV1 BD_ALIAS EST_COLOR_S]" & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("! =============================================================================" & vbLf)
            sw.Write("! Via V1" & vbLf)
            sw.Write("! ======" & vbLf)
            sw.Write("!KEY    IDENT_SIG  DSO     DSO_BIS VCD_VEL          VO TER STA  TE  TS  T1  T2   TRT_DSO  ITI_DSO  HRG_EN  AJE         NQ CDVS                                                                                    BD_ALIAS EST_COLOR_S" & vbLf)
            sw.Write("!											       " & vbLf)
            sw.Write("TOB_V1  202,203    PBO1TOB -       -                V1 TOB TOB  09  10  360 360  NINGUNO  -        750S1   -           3  CDV22CTOB, CDV22BTOB,  CDV22ATOB, CDV21TOB, CDVAG21NTOB, CDV20CTOB, CDV20BTOB, CDV20ATOB TOB_TR_AND_001 0" & vbLf)
            sw.Write("COL_V1  130        PBO1COL -       -                V1 -   COL  09  11  360 360  NINGUNO  -        750S1   CDV20ATOB   1  CDV12COL, CDV13COL, CDV11BIL                                                        COL_TR_AND_001 2 " & vbLf)
            sw.Write("BIL_V1  132        PBO1BIL -       -                V1 -   BIL  10  12  360 360  NINGUNO  -        750S1   CDV11BIL    1  CDV12BIL, CDV13BIL, CDV11APDG, CDV11BPDG, CDV11CPDG                           BIL_TR_AND_001 3 " & vbLf)
            sw.Write("PDG_V1  134        PBO1PDG -       -                V1 -   PDG  13  13  360 360  NINGUNO  -        750S1   CDV11CPDG   1  CDV12PDG, CDV13PDG, CDV11SBO                                                        PDG_TR_AND_001 1" & vbLf)
            sw.Write("SBO_V1  136        PBO1SBO -       -                V1 -   SBO  11  11  360 360  NINGUNO  -        750S1   CDV11SBO    1  CDV12SBO, CDV13SBO, CDV11PEG                                                        SBO_TR_AND_001 2" & vbLf)
            sw.Write("PEG_V1  138        PBO1PEG -       -                V1 -   PEG  13  09  360 360  NINGUNO  -        750S1   CDV11PEG    1  CDV12PEG, CDV13PEG, CDV11ALOR, CDV11BLOR                                         PEG_TR_AND_001 3" & vbLf)
            sw.Write("LOR_V1  140        PBO1LOR -       -                V1 -   LOR  10  11  360 360  NINGUNO  -        750S2   CDV11BLOR   1  CDV12LOR, CDV13LOR, CDV10RGR, CDV11RGR                                          LOR_TR_AND_001 1" & vbLf)
            sw.Write("RGR_V1  142,143    PBO1RGR -       -                V1 -   RGR  09  10  360 360  NINGUNO  -        750S2   CDV11RGR    1  CDV12RGR, CDVAG13NRGR, CDV13RGR, CDV14RGR, CDV11ALPR, CDV11BLPR                           RGR_TR_AND_001 2" & vbLf)
            sw.Write("LPR_V1  144        PBO1LPR -       -                V1 -   LPR  10  11  360 360  NINGUNO  -        750S3   CDV11BLPR   1  CDV12LPR, CDV13LPR, CDV11RQU                                                        LPR_TR_AND_001 1" & vbLf)
            sw.Write("RQU_V1  146        PBO1RQU -       -                V1 -   RQU  12  09  360 360  NINGUNO  -        750S4   CDV11RQU    1  CDV12RQU, CDV14RQU, CDV15RQU, CDVAG15NRQU, CDV16RQU, CDVAG17NRQU, CDV17RQU, CDV18RQU, CDV11LTO  RQU_TR_AND_001 2" & vbLf)
            sw.Write("LTO_V1  148        PBO1LTO -       -                V1 -   LTO  08  09  360 360  NINGUNO  -        750S4   CDV11LTO    1  CDV12LTO, CDV13LTO, CDV11AMAC, CDV11BMAC                                         LTO_TR_AND_001 1" & vbLf)
            sw.Write("MAC_V1  150        PBO1MAC -       -                V1 -   MAC  11  11  360 360  NINGUNO  -        750S5   CDV11BMAC   1  CDV12MAC, CDV13MAC, CDV10AVMA, CDV10BVMA, CDV11VMA, CDVAG11NVMA, CDV12AVMA              MAC_TR_AND_001 3" & vbLf)
            sw.Write("VMA_V1  152,153    PBO1VMA -       -                V1 VMA VMA  10  11  360 360  NINGUNO  -        750S6   CDV12AVMA   1  CDV12BVMA, CDVAG13NVMA, CDV13VMA, CDV14VMA, CDV10VVA, CDVAG11NVVA, CDV11VVA                         VMA_TR_AND_001 3" & vbLf)
            sw.Write("VVA_V1  154,155    PBO1VVA PBO3VVA -                V1 VVA VVA  10  10  360 360  NINGUNO  -        750S7   CDV11VVA    2  CDV12AVVA, CDV12BVVA, CDV13VVA, CDV11ARMA, CDV11BRMA                           VVA_TR_AND_001 3" & vbLf)
            sw.Write("RMA_V1  156        PBO1RMA -       -                V1 -   RMA  08  13  360 360  NINGUNO  -        750S8   CDV11BRMA   1  CDV12RMA, CDV13RMA, CDV14ARMA, CDV14BRMA                                         RMA_TR_AND_001 2" & vbLf)
            sw.Write("TRI_V1  158        PBO1TRI -       -                V1 -   TRI  08  10  360 360  NINGUNO  -        750S8   CDV14BRMA   1  CDV12TRI, CDV13TRI, CDV11ASJE, CDV11BSJE                                      TRI_TR_AND_001 1" & vbLf)
            sw.Write("SJE_V1  188        PBO1SJE -       -                V1 -   SJE  10  12  360 360  NINGUNO  -        750S9   CDV11BSJE   1  CDV12SJE, CDV13SJE, CDV11LQU                                                        SJE_TR_AND_001 2 " & vbLf)
            sw.Write("LQU_V1  160        PBO1LQU -       -                V1 -   LQU  10  12  360 360  NINGUNO  -        750S9   CDV11LQU    1  CDV12LQU, CDV13LQU, CDV11ECO                                                        LQU_TR_AND_001 1" & vbLf)
            sw.Write("ECO_V1  162        PBO1ECO -       -                V1 -   ECO  10  11  360 360  NINGUNO  -        750S9   CDV11ECO    1  CDV12ECO, CDV13ECO, CDV10HSR, CDV11HSR                                          ECO_TR_AND_001 3" & vbLf)
            sw.Write("HSR_V1  164,165    PBO1HSR -       -                V1 -   HSR  10  10  360 360  NINGUNO  -        750S10  CDV11HSR    1  CDV12HSR, CDVAG13NHSR, CDV13HSR, CDV14HSR, CDV11APIN, CDV11BPIN, CDV11CPIN              HSR_TR_AND_001 3" & vbLf)
            sw.Write("PIN_V1  166        PBO1PIN -       -                V1 -   PIN  11  12  360 360  NINGUNO  -        750S11  CDV11CPIN   1  CDV12PIN, CDV13PIN, CDV11ALME, CDV11BLME                                         PIN_TR_AND_001 2" & vbLf)
            sw.Write("LME_V1  168        PBO1LME -       -                V1 -   LME  09  12  360 360  NINGUNO  -        750S11  CDV11BLME   1  CDV06PPA, CDV07PPA, CDVAG07NPPA, CDV08PPA, CDVAG09NPPA, CDV09PPA, CDV10PPA, CDV11PPA, CDVAG11NPPA            LME_TR_AND_001 1" & vbLf)
            sw.Write("PPA_V1  170,171    -       -       -                V1 PPA PPA  11  -   360 360  NINGUNO  -        750S11  CDVAG11NPPA 3  CDV12APPA, CDV12BPPA, CDV12CPPA                                                       PPA_TR_AND_001 0" & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("!											       " & vbLf)
            sw.Write("! =============================================================================		  " & vbLf)
            sw.Write("! Via V2										  " & vbLf)
            sw.Write("! ======										       " & vbLf)
            sw.Write("!KEY   IDENT_SIG   DSO     DSO_BIS VCD_VEL          VO TER STA  TE  TS  T1  T2   TRT_DSO  ITI_DSO  HRG_EN  AJE         NQ CDVS                                                                                                                              BD_ALIAS EST_COLOR_S" & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("TOB_V2  75,74      -       -       -                V2 TOB TOB  16   -  360 360  NINGUNO  -        750S1   CDVAG11NTOB 3  CDV12ATOB, CDV12BTOB, CDV12CTOB                                                                                                 TOB_TR_AND_002 0" & vbLf)
            sw.Write("COL_V2  3          PBO2COL -       -                V2 -   COL  10  11  360 360  NINGUNO  -        750S1   CDV23COL    1  CDV22COL, CDV21COL, CDV10ATOB, CDV10BTOB, CDV11TOB, CDVAG11NTOB                                                                   COL_TR_AND_002 2 " & vbLf)
            sw.Write("BIL_V2  5          PBO2BIL -       -                V2 -   BIL  11  11  360 360  NINGUNO  -        750S1   CDV23ABIL   1  CDV22BIL, CDV21BIL, CDV23COL                                                                                                  BIL_TR_AND_002 3 " & vbLf)
            sw.Write("PDG_V2  7          PBO2PDG -       -                V2 -   PDG  09  10  360 360  NINGUNO  -        750S1   CDV23PDG    1  CDV22PDG, CDV21PDG, CDV23CBIL, CDV23BBIL, CDV23ABIL                                                                     PDG_TR_AND_002 1" & vbLf)
            sw.Write("SBO_V2  9          PBO2SBO -       -                V2 -   SBO  11  10  360 360  NINGUNO  -        750S1   CDV23SBO    1  CDV22SBO, CDV21SBO, CDV23PDG                                                                                                  SBO_TR_AND_002 2" & vbLf)
            sw.Write("PEG_V2  11         PBO2PEG -       -                V2 -   PEG  07  13  360 360  NINGUNO  -        750S1   CDV23APEG   1  CDV22PEG, CDV21PEG, CDV23SBO                                                                                                  PEG_TR_AND_002 3" & vbLf)
            sw.Write("LOR_V2  13         PBO2LOR -       -                V2 -   LOR  10  11  360 360  NINGUNO  -        750S2   CDV23LOR    1  CDV22LOR, CDV21LOR, CDV23BPEG, CDV23APEG                                                                                   LOR_TR_AND_002 1" & vbLf)
            sw.Write("RGR_V2  15,14      PBO2RGR -       -                V2 -   RGR  09  10  360 360  NINGUNO  -        750S2   CDV23RGR    2  CDV22BRGR, CDV22ARGR, CDV21RGR, CDV23LOR                                                                                    RGR_TR_AND_002 2" & vbLf)
            sw.Write("LPR_V2  17         PBO2LPR -       -                V2 -   LPR  10  14  360 360  NINGUNO  -        750S3   CDV23LPR    1  CDV22LPR, CDV25RGR, CDV24BRGR, CDV24ARGR, CDVAG23NRGR, CDV23RGR                                                                   LPR_TR_AND_002 1" & vbLf)
            sw.Write("RQU_V2  19         PBO2RQU -       -                V2 -   RQU  08  13  360 360  NINGUNO  -        750S4   CDV24RQU    1  CDV22RQU, CDV21RQU, CDV23LPR                                                                                                  RQU_TR_AND_002 2" & vbLf)
            sw.Write("LTO_V2  21         PBO2LTO -       -                V2 -   LTO  13  13  360 360  NINGUNO  -        750S4   CDV23ALTO   1  CDV22LTO, CDV28RQU, CDVAG27BNRQU, CDV27RQU, CDVAG27ANRQU, CDV26BRQU, CDV26ARQU, CDVAG25BNRQU, CDV25RQU, CDVAG25ANRQU, CDV24RQU                LTO_TR_AND_002 1" & vbLf)
            sw.Write("MAC_V2  23         PBO2MAC -       -                V2 -   MAC  12  12  360 360  NINGUNO  -        750S5   CDV23MAC    1  CDV22MAC, CDV21MAC, CDV23BLTO, CDV23ALTO                                                                                   MAC_TR_AND_002 3" & vbLf)
            sw.Write("VMA_V2  25,24      PBO2VMA -       -                V2 VMA VMA  10  14  360 360  NINGUNO  -        750S6   CDV23AVMA   1  CDV22VMA, CDV21VMA, CDV20VMA, CDVAG19NVMA, CDV19AVMA, CDV18VMA, CDV23MAC                                                         VMA_TR_AND_002 3" & vbLf)
            sw.Write("VVA_V2  27,26      PBO2VVA -       -                V2 VVA VVA  09  10  360 360  NINGUNO  -        750S7   CDV23VVA    1  CDV22VVA, CDVAG21NVVA, CDV21VVA, CDV20VVA, CDV24VMA, CDV23BVMA, CDVAG23NVMA, CDV23AVMA                                                        VVA_TR_AND_002 3" & vbLf)
            sw.Write("RMA_V2  29         PBO2RMA -       -                V2 -   RMA  14  09  360 360  NINGUNO  -        750S8   CDV23ARMA   1  CDV22RMA, CDV21RMA, CDV24BVVA, CDV24AVVA, CDV23VVA                                                                      RMA_TR_AND_002 2" & vbLf)
            sw.Write("TRI_V2  31         PBO2TRI -       -                V2 -   TRI  12  12  360 360  NINGUNO  -        750S8   CDV23TRI    1  CDV22TRI, CDV21TRI, CDV23BRMA, CDV23ARMA                                                                                   TRI_TR_AND_002 1" & vbLf)
            sw.Write("SJE_V2  61         PBO2SJE -       -                V2 -   SJE  10  12  360 360  NINGUNO  -        750S9   CDV23ASJE   1  CDV22SJE, CDV21SJE, CDV23TRI                                                                                               SJE_TR_AND_002 2 " & vbLf)
            sw.Write("LQU_V2  33         PBO2LQU -       -                V2 -   LQU  10  12  360 360  NINGUNO  -        750S9   CDV23LQU    1  CDV22LQU, CDV21LQU, CDV23BSJE, CDV23ASJE                                                                              LQU_TR_AND_002 1 " & vbLf)
            sw.Write("ECO_V2  35         PBO2ECO -       -                V2 -   ECO  10  11  360 360  NINGUNO  -        750S9   CDV23ECO    1  CDV22ECO, CDV21ECO, CDV23LQU                                                                                                  ECO_TR_AND_002 3" & vbLf)
            sw.Write("HSR_V2  37,36      PBO2HSR -       -                V2 -   HSR  09  10  360 360  NINGUNO  -        750S10  CDV23HSR    2  CDV22BHSR, CDV22AHSR, CDV21HSR, CDV23ECO                                                                                    HSR_TR_AND_002 3" & vbLf)
            sw.Write("PIN_V2  39         PBO2PIN -       -                V2 -   PIN  11  11  360 360  NINGUNO  -        750S11  CDV23APIN   1  CDV22PIN, CDV21PIN, CDV24CHSR, CDV24BHSR, CDV24AHSR, CDVAG23NHSR, CDV23HSR                                                      PIN_TR_AND_002 2 " & vbLf)
            sw.Write("LME_V2  41         PBO2LME -       -                V2 -   LME  10  11  360 360  NINGUNO  -        750S11  CDV18PPA    1  CDV22LME, CDV21LME, CDV23BPIN, CDV23APIN                                                                                   LME_TR_AND_002 1 " & vbLf)
            sw.Write("PPA_V2  43,42      PBO2PPA -       -                V2 PPA PPA  10  12  360 360  NINGUNO  -        750S11  -           3  CDV22CPPA, CDV22BPPA, CDV22APPA, CDV21PPA, CDVAG21NPPA, CDV20PPA, CDVAG19DNPPA, CDV19CPPA, CDVAG19CNPPA, CDV19BPPA, CDVAG19BNPPA, CDV19APPA, CDVAG19ANPPA, CDV18PPA     PPA_TR_AND_002 0" & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("!											        " & vbLf)
            sw.Write("! =============================================================================		   " & vbLf)
            sw.Write("! Via VZ										   " & vbLf)
            sw.Write("! ======" & vbLf)
            sw.Write("!KEY   IDENT_SIG   DSO     DSO_BIS VCD_VEL          VO TER STA  TE  TS  T1  T2   TRT_DSO  ITI_DSO  HRG_EN  AJE         NQ CDVS                                                                                                                              BD_ALIAS EST_COLOR_S" & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("VMA_VZ 56,57       PBO3VMA -       -                VZ VMA VMA  11  08  360 360  NINGUNO  -        750S6   -           3  CDVZAVMA, CDVZBVMA, CDVZCVMA                                                                                                  VMA_TR_AND_003 0" & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("[END RELATION]" & vbLf)



          
        End Using



        out_path = Environment.GetFolderPath(Environment.SpecialFolder.Desktop) & "\ ptarL2.conf"

        Using sw As StreamWriter = New StreamWriter(out_path)
            sw.Write("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("!                               T H A L E S - I S" & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("! NOMBRE: ptar.conf " & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("! DESCRIPCION:" & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("!   Este fichero contiene informaciones relativas a la regulacion." & vbLf)
            sw.Write("!   Se emplea para inicializar la relacion MDB PTAR." & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("!   Campos:" & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("!        KEY              = Descripcion del punto de parada en la estacion" & vbLf)
            sw.Write("!	-> BD_PTAR          = Nombre del anden en BDTR" & vbLf)
            sw.Write("!	-> HRG_HIDSO        = Nombre del TK DSO (PBO) (si HRG_OPTDSO = T en TCF)" & vbLf)
            sw.Write("!	-> VCD_VEL          = Nombre de la variable de comando de velocidad" & vbLf)
            sw.Write("!	-> VCD_PESP         = Nombre de la variable de comando salto des estacion" & vbLf)
            sw.Write("!	-> HRG_INUVOIE (VO) = Nombre del tramo si parada en via (lugar del DSO)" & vbLf)
            sw.Write("!	-> HRG_INUTER (TER) = Nombre del terminal si parada en terminal (lugar del DSO)" & vbLf)
            sw.Write("!                           Nombre del terminal de extremidad o del terminal de Bucle" & vbLf)
            sw.Write("!	-> HRG_INUSTA (STA) = Nombre de la estacion" & vbLf)
            sw.Write("!	-> HRG_BTE          = Tiempo de entrada (segundos). Tiempo transcurrido entre" & vbLf)
            sw.Write("!                               liberacion CDV antes de anden y parada del tren en el " & vbLf)
            sw.Write("!                               anden" & vbLf)
            sw.Write("!	-> HRG_BTS          = Tiempo de salida (segundos). Tiempo transcurrido entre el" & vbLf)
            sw.Write("!                             arranque del tren y la ocupacion del CDV de salida." & vbLf)
            sw.Write("!	-> HRG_HT1          = Umbral para emision alarma retraso respecto horario programado" & vbLf)
            sw.Write("!                             (segundos)." & vbLf)
            sw.Write("!	-> HRG_HT2          = Umbral para emision alarma retraso respecto horario de linea" & vbLf)
            sw.Write("!                             (segundos)" & vbLf)
            sw.Write("!	-> TRT_DSO          = Lista de las comprobaciones para el encendido de PBO." & vbLf)
            sw.Write("!	                      Valores posibles:   VIA_SALIDA,VIA_LLEGADA,TALLERES,ITINERARIOS," & vbLf)
            sw.Write("!                                               SALIDA/TAL,LLEGADA/TAL,SALIDA/ITI,LLEGADA/ITI" & vbLf)
            sw.Write("!                                               NINGUNO" & vbLf)
            sw.Write("!	-> ITI_DSO          = Lista de itinerarios incompatibles con el apagado del PBO." & vbLf)
            sw.Write("!	-> HRG_ICDVAJE      = Nombre del CDV antes de anden (- para terminal)." & vbLf)
            sw.Write("!	-> HRG_INCQ    (NQ) = Cantidad de CDV de anden." & vbLf)
            sw.Write("!	-> HRG_ICDV1	  = Lista de los CDV de anden de la estacion actual + interestacion " & vbLf)
            sw.Write("!                           siguiente" & vbLf)
            sw.Write("!                                (si HRG_OPTALL = T en TCF)" & vbLf)
            sw.Write("!       -> EST_COLOR_S     = Color del anden" & vbLf)
            sw.Write("!                            0: sin color, 1: rojo, 2: verde, 3 rojo/verde" & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("! AUTOR:             Jorge Raccoursier." & vbLf)
            sw.Write("! FECHA DE CREACION: 23/06/2003." & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("[ATTRIBUTES " & vbLf)
            sw.Write("KEY   BD_PTAR HRG_HIDSO VCD_VEL VCD_PESP" & vbLf)
            sw.Write("      HRG_INUVOIE HRG_INUTER HRG_INUSTA HRG_BTE HRG_BTS HRG_HT1 HRG_HT2" & vbLf)
            sw.Write("      TRT_DSO ITI_DSO HRG_ENERSECC HRG_ICDVAJE HRG_INCQ EST_COLOR_S HRG_ICDV1]" & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("! =============================================================================" & vbLf)
            sw.Write("! Via V1" & vbLf)
            sw.Write("! ======" & vbLf)
            sw.Write("!KEY   BD_PTAR  DSO    VCD_VEL          VCD_PESP          VO  TER  STA  TE  TS  T1  T2   TRT_DSO  ITI_DSO                                 HRG_EN	AJE         NQ  EST_COLOR_S CDVS" & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("AV_V1  ANDEN1AV PBO1AV VCD/VELV1AV-POS  VCD/PESPV1AV-EST  V1  AV   AV   12  08  360 360  ITI      ITI1022AV                               750S02 	-           2   3 CDV22BAV, CDV22AAV, CDVAG21NAV, CDV20AV, CDV19AV, CDV11ZA" & vbLf)
            sw.Write("ZA_V1  ANDEN1ZA PBO1ZA VCD/VELV1ZA-POS  VCD/PESPV1ZA-EST  V1  -    ZA   11  08  360 360  NINGUNO  -                                       750S02	CDV11ZA     1   3 CDV12ZA, CDV13ZA, CDV11DO" & vbLf)
            sw.Write("DO_V1  ANDEN1DO PBO1DO VCD/VELV1DO-POS  VCD/PESPV1DO-EST  V1  -    DO   11  08  360 360  NINGUNO  -                                       750S02	CDV11DO     1   1 CDV12DO, CDV13DO, CDV10EI, CDVAG11NEI" & vbLf)
            sw.Write("EI_V1  ANDEN1EI PBO1EI VCD/VELV1EI-POS  VCD/PESPV1EI-EST  V1  EI   EI   08  08  360 360  NINGUNO  -                                       750S01	CDVAG11NEI  1   2 CDV12EI, CDVAG13NEI, CDV14EI, CDV11CE" & vbLf)
            sw.Write("CE_V1  ANDEN1CE PBO1CE VCD/VELV1CE-POS  VCD/PESPV1CE-EST  V1  -    CE   11  08  360 360  NINGUNO  -                                       750S0	      CDV11CE     1   1 CDV12CE, CDV13CE, CDV10CB, CDV11CB" & vbLf)
            sw.Write("CB_V1  ANDEN1CB PBO1CB VCD/VELV1CB-POS  VCD/PESPV1CB-EST  V1  CB   CB   10  08  360 360  NINGUNO  -                                       750S1	      CDV11CB     1   2 CDV12CB, CDVAG13NCB, CDV14CB, CDV11PT" & vbLf)
            sw.Write("PT_V1  ANDEN1PT PBO1PT VCD/VELV1PT-POS  VCD/PESPV1PT-EST  V1  -    PT   10  08  360 360  NINGUNO  -                                       750S1	      CDV11PT     1   1 CDV12PT, CDV13PT, CDV10CA, CDVAG11NCA, CDV11CA" & vbLf)
            sw.Write("CA_V1  ANDEN1CA PBO1CA VCD/VELV1CA-POS  VCD/PESPV1CA-EST  V1  CA   CA   10  13  360 360  NINGUNO  -                                       750S2	      CDVAG11NCA  2   3 CDV12ACA, CDV12BCA, CDV13CA, CDV14CA, CDV15CA, CDV16CA, CDV10AN, CDV11AN" & vbLf)
            sw.Write("AN_V1  ANDEN1AN PBO1AN VCD/VELV1AN-POS  VCD/PESPV1AN-EST  V1  -    AN   10  11  360 360  NINGUNO  -                                       750S3  	CDV11AN     1   3 CDV12AN, CDV08HE, CDVAG09ANHE, CDVAG09BNHE, CDVAG10ANHE, CDVAG10BNHE,+ " & vbLf)
            sw.Write("                                                                                                                                                       CDVAG11NHE, CDV11HE" & vbLf)
            sw.Write("HE_V1  ANDEN1HE PBO1HE VCD/VELV1HE-POS  VCD/PESPV1HE-EST  V1  -    HE   11  09  360 360  NINGUNO  -                                       750S4		CDVAG11NHE  1   3 CDV12HE, CDV13AHE, CDV13BHE, CDV14HE, CDV11TO" & vbLf)
            sw.Write("TO_V1  ANDEN1TO PBO1TO VCD/VELV1TO-POS  VCD/PESPV1TO-EST  V1  -    TO   10  09  360 360  NINGUNO  -                                       750S5		CDV11TO     1   2 CDV12TO, CDV13TO, CDV14TO, CDV11PQ" & vbLf)
            sw.Write("PQ_V1  ANDEN1PQ PBO1PQ VCD/VELV1PQ-POS  VCD/PESPV1PQ-EST  V1  -    PQ   10  10  360 360  NINGUNO  -                                       750S5		CDV11PQ     1   1 CDV12PQ, CDV13PQ, CDV14PQ, CDV11RO" & vbLf)
            sw.Write("RO_V1  ANDEN1RO PBO1RO VCD/VELV1RO-POS  VCD/PESPV1RO-EST  V1  -    RO   10  09  360 360  NINGUNO  -                                       750S5		CDV11RO     1   2 CDV12RO, CDV13RO, CDV10FR, CDV11FR" & vbLf)
            sw.Write("FR_V1  ANDEN1FR PBO1FR VCD/VELV1FR-POS  VCD/PESPV1FR-EST  V1  -    FR   10  10  360 360  NINGUNO  -                                       750S6		CDV11FR     1   3 CDV12FR, CDVAG13NFR, CDV14FR, CDV15FR, CDV11LL" & vbLf)
            sw.Write("LL_V1  ANDEN1LL PBO1LL VCD/VELV1LL-POS  VCD/PESPV1LL-EST  V1  -    LL   11  10  360 360  NINGUNO  -                                       750S7		CDV11LL     1   1 CDV12LL, CDV13LL, CDV14LL, CDV11SM" & vbLf)
            sw.Write("SM_V1  ANDEN1SM PBO1SM VCD/VELV1SM-POS  VCD/PESPV1SM-EST  V1  -    SM   11  10  360 360  NINGUNO  -                                       750S7		CDV11SM     1   2 CDV12SM, CDV13SM, CDV14SM, CDV11LV" & vbLf)
            sw.Write("LV_V1  ANDEN1LV PBO1LV VCD/VELV1LV-POS  VCD/PESPV1LV-EST  V1  -    LV   11  09  360 360  NINGUNO  -                                       750S7		CDV11LV     1   1 CDV12LV, CDV13LV, CDV14LV, CDV11DE" & vbLf)
            sw.Write("DE_V1  ANDEN1DE PBO1DE VCD/VELV1DE-POS  VCD/PESPV1DE-EST  V1  -    DE   11  09  360 360  NINGUNO  -                                       750S8		CDV11DE     1   2 CDV12DE, CDV13DE, CDV14DE, CDV06CN" & vbLf)
            sw.Write("CN_V1  ANDEN1CN PBO1CN VCD/VELV1CN-POS  VCD/PESPV1CN-EST  V1  -    CN   11  09  360 360  NINGUNO  -                                       750S8		CDV06CN     1   1 CDV07LO, CDV08LO, CDVAG08NLO, CDVAG09NLO, CDV10ALO, CDV10BLO,+" & vbLf)
            sw.Write("                                                                                                                                                       CDV11LO" & vbLf)
            sw.Write("LO_V1  ANDEN1LO PBO1LO VCD/VELV1LO-POS  VCD/PESPV1LO-EST  V1  LO   LO   11  09  360 360  ITI      ITI1422LO, ITI2214LO, ITIV1LO           750S9		CDV11LO     1   3 CDV12LO, CDVAG13NLO, CDV14LO, CDV11EP" & vbLf)
            sw.Write("EP_V1  ANDEN1EP PBO1EP VCD/VELV1EP-POS  VCD/PESPV1EP-EST  V1  -    EP   11  09  360 360  ITI      ITI1022LC                               750S10	CDV11EP     1   2 CDV12EP, CDV13EP, CDV09EP, CDV10LC, CDV11LC, CDVAG11NLC" & vbLf)
            sw.Write("LC_V1  ANDEN1LC -      -                -                 V1  LC   LC   11  -   360 360  NINGUNO  -                                       750S10	CDVAG11NLC  1   3 CDV12LC" & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("! =============================================================================" & vbLf)
            sw.Write("! Via V2" & vbLf)
            sw.Write("! ======" & vbLf)
            sw.Write("!KEY   BD_PTAR  DSO    VCD_VEL          VCD_PESP          VO  TER  STA  TE  TS  T1  T2   TRT_DSO  ITI_DSO                                 HRG_EN	AJE	   NQ  EST_COLOR_S CDVS" & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("AV_V2  ANDEN2AV -      -                -                 V2  AV   AV   10  -   360 360  NINGUNO  -                                       750S02	CDVAG11NAV  1  3 CDV12AV" & vbLf)
            sw.Write("ZA_V2  ANDEN2ZA PBO2ZA VCD/VELV2ZA-POS  VCD/PESPV2ZA-EST  V2  -    ZA   12  10  360 360  NINGUNO  -                                       750S02	CDV23ZA     1  3 CDV22ZA, CDV21ZA, CDV09AV, CDV10AV, CDV11AV, CDVAG11NAV" & vbLf)
            sw.Write("DO_V2  ANDEN2DO PBO2DO VCD/VELV2DO-POS  VCD/PESPV2DO-EST  V2  -    DO   12  10  360 360  NINGUNO  -                                       750S02	CDV23DO     1  1 CDV22DO, CDV21DO, CDV23ZA" & vbLf)
            sw.Write("EI_V2  ANDEN2EI PBO2EI VCD/VELV2EI-POS  VCD/PESPV2EI-EST  V2  EI   EI   12  10  360 360  NINGUNO  -                                       750S01	CDVAG23NEI  1  2 CDV22EI, CDVAG21NEI, CDV20EI, CDV23DO" & vbLf)
            sw.Write("CE_V2  ANDEN2CE PBO2CE VCD/VELV2CE-POS  VCD/PESPV2CE-EST  V2  -    CE   10  11  360 360  NINGUNO  -                                       750S0		CDV23CE     1  1 CDV22CE, CDV21CE, CDV26EI, CDV25EI, CDV24EI, CDVAG23NEI" & vbLf)
            sw.Write("CB_V2  ANDEN2CB PBO2CB VCD/VELV2CB-POS  VCD/PESPV2CB-EST  V2  CB   CB   10  11  360 360  NINGUNO  -                                       750S1		CDVAG23NCB  1  2 CDV22CB, CDV21CB, CDV23CE" & vbLf)
            sw.Write("PT_V2  ANDEN2PT PBO2PT VCD/VELV2PT-POS  VCD/PESPV2PT-EST  V2  -    PT   10  11  360 360  NINGUNO  -                                       750S1		CDV19CA     1  1 CDV22PT, CDV26CB, CDV25CB, CDV24CB, CDVAG23NCB" & vbLf)
            sw.Write("CA_V2  ANDEN2CA PBO2CA VCD/VELV2CA-POS  VCD/PESPV2CA-EST  V2  CA   CA   10  11  360 360  NINGUNO  -                                       750S2		CDV23CA     1  3 CDV22CA, CDVAG21NCA, CDV20CA, CDV19CA" & vbLf)
            sw.Write("AN_V2  ANDEN2AN PBO2AN VCD/VELV2AN-POS  VCD/PESPV2AN-EST  V2  -    AN   10  11  360 360  NINGUNO  -                                       750S3		CDV18HE     1  3 CDV22AN, CDV21AN, CDV20AN, CDV26CA, CDV25CA, CDV24CA, CDV23CA" & vbLf)
            sw.Write("HE_V2  ANDEN2HE PBO2HE VCD/VELV2HE-POS  VCD/PESPV2HE-EST  V2  -    HE   08  12  360 360  NINGUNO  -                                       750S4		CDV23HE     1  3 CDV22HE, CDVAG21NHE, CDV20HE, CDV19BHE, CDVAG19BNHE, CDVAG19ANHE,+" & vbLf)
            sw.Write("				 CDV19AHE, CDV18HE" & vbLf)
            sw.Write("TO_V2  ANDEN2TO PBO2TO VCD/VELV2TO-POS  VCD/PESPV2TO-EST  V2  -    TO   08  12  360 360  NINGUNO  -                                       750S5		CDV23TO     1  2 CDV22TO, CDV21TO, CDV24HE, CDV23HE" & vbLf)
            sw.Write("PQ_V2  ANDEN2PQ PBO2PQ VCD/VELV2PQ-POS  VCD/PESPV2PQ-EST  V2  -    PQ   08  13  360 360  NINGUNO  -                                       750S5		CDV23PQ     1  1 CDV22PQ, CDV21PQ, CDV20PQ, CDV23TO" & vbLf)
            sw.Write("RO_V2  ANDEN2RO PBO2RO VCD/VELV2RO-POS  VCD/PESPV2RO-EST  V2  -    RO   09  11  360 360  NINGUNO  -                                       750S5		CDV23RO     1  2 CDV22RO, CDV21RO, CDV20RO, CDV23PQ" & vbLf)
            sw.Write("FR_V2  ANDEN2FR PBO2FR VCD/VELV2FR-POS  VCD/PESPV2FR-EST  V2  -    FR   09  12  360 360  NINGUNO  -                                       750S6		CDVAG23NFR  1  3 CDV22FR, CDV21BFR, CDV21AFR, CDV20FR, CDV23RO" & vbLf)
            sw.Write("LL_V2  ANDEN2LL PBO2LL VCD/VELV2LL-POS  VCD/PESPV2LL-EST  V2  -    LL   08  12  360 360  NINGUNO  -                                       750S7		CDV23LL     1  1 CDV22LL, CDV21LL, CDV24FR, CDVAG23NFR" & vbLf)
            sw.Write("SM_V2  ANDEN2SM PBO2SM VCD/VELV2SM-POS  VCD/PESPV2SM-EST  V2  -    SM   09  12  360 360  NINGUNO  -                                       750S7		CDV23SM     1  2 CDV22SM, CDV21SM, CDV20SM, CDV23LL" & vbLf)
            sw.Write("LV_V2  ANDEN2LV PBO2LV VCD/VELV2LV-POS  VCD/PESPV2LV-EST  V2  -    LV   09  11  360 360  NINGUNO  -                                       750S7		CDV23LV     1  1 CDV22LV, CDV21LV, CDV20LV, CDV23SM" & vbLf)
            sw.Write("DE_V2  ANDEN2DE PBO2DE VCD/VELV2DE-POS  VCD/PESPV2DE-EST  V2  -    DE   09  11  360 360  NINGUNO  -                                       750S8		CDV23DE     1  2 CDV22DE, CDV21DE, CDV20DE, CDV23LV" & vbLf)
            sw.Write("CN_V2  ANDEN2CN PBO2CN VCD/VELV2CN-POS  VCD/PESPV2CN-EST  V2  -    CN   09  11  360 360  NINGUNO  -                                       750S8		CDV18LO     1  1 CDV22CN, CDV21CN, CDV20CN, CDV23DE" & vbLf)
            sw.Write("LO_V2  ANDEN2LO PBO2LO VCD/VELV2LO-POS  VCD/PESPV2LO-EST  V2  LO   LO   15  12  360 360  ITI      ITIZ38LO, ITI38ZLO, ITI3818LO           750S9		CDVAG23NLO  2  3 CDV22BLO, CDV22ALO, CDV20LO, CDV19BLO, CDVAG19BNLO, CDVAG19ANLO, CDV18LO" & vbLf)
            sw.Write("EP_V2  ANDEN2EP PBO2EP VCD/VELV2EP-POS  VCD/PESPV2EP-EST  V2  -    EP   11  10  360 360  NINGUNO  -                                       750S10	CDV23EP     1  2 CDV22EP, CDV21EP, CDV24LO, CDVAG23NLO" & vbLf)
            sw.Write("LC_V2  ANDEN2LC PBO2LC VCD/VELV2LC-POS  VCD/PESPV2LC-EST  V2  LC   LC   12  08  360 360  ITI      ITI1022LC                               750S10	-           2  3 CDV22BLC, CDV22ALC, CDVAG21NLC, CDV20LC, CDV19LC, CDV23EP" & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("!" & vbLf)
            sw.Write("[END RELATION]" & vbLf)

           





        End Using

        TextBox1.Text = "Archivos ptar.conf de Línea 2, 4 y 4A han sido creado"
        MsgBox("Archivos Generados")

    End Sub

    Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click
        Generando()
    End Sub

    Private Sub TextBox1_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles TextBox1.TextChanged

    End Sub
End Class